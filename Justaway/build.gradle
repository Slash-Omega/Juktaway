apply plugin: 'android'
apply plugin: 'android-apt'

dependencies {
    compile "com.android.support:support-v4:19.1.+"
    compile "com.google.code.gson:gson:2.2.4"
    compile "de.greenrobot:eventbus:2.2.0"

    compile "org.twitter4j:twitter4j-core:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-async:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-media-support:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-stream:${twitter4jVersion}"
    compile "com.nostra13.universalimageloader:universal-image-loader:1.9.1"
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    compile "com.viewpagerindicator:library:${viewpagerIndicatorVersion}"
    apt "com.jakewharton:butterknife:${butterKnifeVersion}"

    compile "com.github.chrisbanes.actionbarpulltorefresh:library:0.9.9"
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    sourceSets {
        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        // debug {
        //     storeFile file("debug.keystore")
        // }

        release
    }

    buildTypes {
        release {
            runProguard false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile file('proguard-project.txt')

            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
        }
    }

    lintOptions {
        //checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
}

if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}

